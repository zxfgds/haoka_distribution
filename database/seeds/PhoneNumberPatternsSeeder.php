<?php


use Phinx\Seed\AbstractSeed;

class PhoneNumberPatternsSeeder extends AbstractSeed
{
    public function run(): void
    {
        $liangHaoPatterns = [
            'AA'         => '/(\d)\1/',
            'AAA'        => '/(\d)\1{2}/',
            'AAAA'       => '/(\d)\1{3}/',
            'AAAAA'      => '/(\d)\1{4}/',
            '6A'         => '/(\d)\1{5}/',
            '7A'         => '/(\d)\1{6}/',
            '8A'         => '/(\d)\1{7}/',
            'AAB'        => '/(\d)\1(\d)/',
            'AAAB'       => '/(\d)\1\1(\d)/',
            'AAAAB'      => '/(\d)\1{3}(\d)/',
            'AAAAAB'     => '/(\d)\1{4}(\d)/',
            'AAAAAAB'    => '/(\d)\1{5}(\d)/',
            'AAAAAAAB'   => '/(\d)\1{6}(\d)/',
            'AABB'       => '/(\d)\1(\d)\2/',
            'AAABB'      => '/(\d)\1{2}(\d)\2/',
            'AAAABB'     => '/(\d)\1{3}(\d)\2/',
            'AAAAABB'    => '/(\d)\1{4}(\d)\2/',
            'AABBB'      => '/(\d)\1(\d)\2\2/',
            'AABBBB'     => '/(\d)\1(\d)\2\2\2/',
            'AAABBB'     => '/(\d)\1\1(\d)\2\2/',
            'AAAABBBB'   => '/(\d)\1\1\1(\d)\2\2\2/',
            'ABAB'       => '/(\d)(\d)\1\2/',
            'ABABAB'     => '/(\d)(\d)\1\2\1\2/',
            'ABABABAB'   => '/(\d)(\d)\1\2\1\2\1\2/',
            'ABC'        => '/(\d)(?=\d\+1)(\d)(?=\d\+1)\d/',
            'ABCD'       => '/(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)\d/',
            'ABCDE'      => '/(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)\d/',
            'ABCDEF'     => '/(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)\d/',
            'ABCDEFG'    => '/(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)\d/',
            'ABCDEFGH'   => '/(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)\d/',
            'ABCABC'     => '/(\d)(?=\d\+1)(\d)(?=\d\+1)\d\1\2(\d\+1)/',
            'ABCDABCD'   => '/(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)\d\1\2(\d\+1)\3(\d\+1)/',
            'ABCDEABCDE' => '/(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)(\d)(?=\d\+1)\d\1\2(\d\+1)\3(\d\+1)\4(\d\+1)/',
            '生日号码' => '/(19\d{2}|20\d{2})(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|3[01])/',
            '一路发' => '/168/',
            '四海来财' => '/518/',
            '六六大顺' => '/666/',
            '八百岁' => '/880/',
            '九九归一' => '/990/',
            '平安发财' => '/1688/',
            '大吉大利' => '/1314/',
            '一生一世' => '/5201314/',
            '五福临门' => '/589/',
            '百事可乐' => '/100/',
            '事事如意' => '/881/',
            '三生有幸' => '/333/',
            '永恒不变' => '/101/',
            '繁荣昌盛' => '/998/',
            '福禄寿喜' => '/798/',
            '金玉满堂' => '/567/',
            '步步高升' => '/896/',
            '心想事成' => '/808/',
        ];
        
        $data = [];
        
        foreach ($liangHaoPatterns as $name => $pattern) {
            $data[] = [
                'name'    => $name,
                'pattern' => $pattern,
                'sort'    => 0,
            ];
        }
        
        $this->table('phone_number_patterns')->insert($data)->saveData();
    }
}