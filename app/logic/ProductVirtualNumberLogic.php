<?php

namespace app\logic;

use app\library\RedisCache;
use app\model\ProductVirtualNumber;
use Exception;
use support\Log;

class ProductVirtualNumberLogic extends BaseLogic
{
    protected static string $model = ProductVirtualNumber::class;
    
    //  统一检查 是否存在, 只要存在就不给入库 ,操
    //  上架 下架  入库   删除 售出  清理
    
    /**
     * @throws Exception
     */
    public static function checkExist($phoneNum)
    {
        try {
            $exists = RedisCache::get("vn_" . $phoneNum);
        } catch (Exception $e) {
            Log::error($e);
            throw new Exception($e->getMessage());
        }
    }
    
    public static function handleExcelRow($row)
    {
                $regions = RegionLogic::getFullRegion();
        // 省份
        // 城市
        // 规则
        //
//        var_dump($row);
    }
    
    public static function handleExcelHeader($headerRow): array
    {
        $headerArray = [];
        foreach ($headerRow as $index => $string) {
            // 只保留中文，清除所有空格、换行、英文字母和符号
            $string = preg_replace("/[^\x{4e00}-\x{9fa5}]/u", "", $string);
            
            if (str_contains($string, '省') || str_contains($string, '省份')) {
                $headerArray[$index] = 'province';
            } else if (str_contains($string, '市') || str_contains($string, '归属地')) {
                $headerArray[$index] = 'city';
            } else if (str_contains($string, '号码')) {
                $headerArray[$index] = 'number';
            } else if (str_contains($string, '规则') || str_contains($string, '规律') || str_contains($string, '类型')) {
                $headerArray[$index] = 'type';
            } else if (str_contains($string, '品牌')) {
                $headerArray[$index] = 'brand';
            } else if (str_contains($string, '电话')) {
                $headerArray[$index] = 'brand_phone_num';
            } else if (str_contains($string, '网络') || str_contains($string, '运营商')) {
                $headerArray[$index] = 'operator_name';
            } else if (str_contains($string, '价格')) {
                $headerArray[$index] = 'price';
            } else if (str_contains($string, '底价')) {
                $headerArray[$index] = 'price_floor';
            } else if (str_contains($string, '资费') || str_contains($string, '套餐')) {
                $headerArray[$index] = 'package';
            }
        }
        return $headerArray;
    }
    
    
    public static function formatSaveData($data, $isEdit = FALSE): array
    {
        return parent::format($data); // TODO: Change the autogenerated stub
    }
    
}

// AA (\d)\1{1}
// AAA (\d)\1{2}
// AAAA (\d)\1{3}
// AAAAA (\d)\1{4}
// AAAAAA (\d)\1{5}
// AAAAAAA (\d)\1{6}
// AAAAAAAA (\d)\1{7}